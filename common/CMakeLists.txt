FILE(GLOB VKS_CORE_SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Core/*.cpp)
FILE(GLOB VKS_CORE_HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/Core/*.h )

FILE(GLOB SOURCE_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.cpp)
FILE(GLOB HEADER_FILES ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

#
IF(PKG_CONFIG_FOUND)
	MESSAGE(STATUS "Found pkg-config: ${PKG_CONFIG_EXECUTABLE} -- version ${PKG_CONFIG_VERSION_STRING}.")
	PKG_CHECK_MODULES(SDL2 QUIET sdl2)
	PKG_CHECK_MODULES(GLFW3 QUIET glfw3)
ELSE()
	# TODO add logic for handling if pkg-config not available.
ENDIF()

IF(SDL2_FOUND)
	MESSAGE(STATUS "Found sdl2: ${SDL2_LIBRARIES} -- version ${SDL2_VERSION}.")
ENDIF()

IF(GLFW3_FOUND)
	MESSAGE(STATUS "Found glfw3: ${GLFW3_LIBRARIES} -- version ${GLFW3_VERSION}.")
ENDIF()


ADD_LIBRARY(vkcommon-window-backend-sdl2 OBJECT ${CMAKE_CURRENT_SOURCE_DIR}/WindowBackend/SDLWindow.cpp)
ADD_LIBRARY(vkcommon-window-backend-glfw3 OBJECT ${CMAKE_CURRENT_SOURCE_DIR}/WindowBackend/GLFW3Window.cpp)
TARGET_LINK_LIBRARIES(vkcommon-window-backend-sdl2  PUBLIC ${SDL2_LIBRARIES} )
TARGET_LINK_LIBRARIES(vkcommon-window-backend-glfw3  PUBLIC ${GLFW3_LIBRARIES} )


ADD_LIBRARY(vkcommon ${SOURCE_FILES} ${HEADER_FILES} )
TARGET_LINK_LIBRARIES(vkcommon PUBLIC ${Vulkan_LIBRARIES} fmt vkcommon-core vkcommon-window-backend-sdl2 spirv-cross-c Vulkan-Headers )
ADD_DEPENDENCIES(vkcommon vkcommon-core spirv-cross-c Vulkan-Headers)

# Vulkan dependencies headers.
TARGET_INCLUDE_DIRECTORIES(vkcommon-core PUBLIC ${Vulkan_INCLUDE_DIRS} ${CMAKE_CURRENT_SOURCE_DIR}/Core
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
	$<INSTALL_INTERFACE:vkcommon>
)
TARGET_INCLUDE_DIRECTORIES(vkcommon PRIVATE ${Vulkan_INCLUDE_DIRS}
    PUBLIC
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>
	$<INSTALL_INTERFACE:vkcommon>
)

INSTALL(TARGETS vkcommon-core vkcommon DESTINATION lib)
